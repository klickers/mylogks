// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model LogEntry {
  id        String    @id @default(uuid())
  group     LogGroup? @relation("LogEntry_group", fields: [groupId], references: [id])
  groupId   String?   @map("group")
  content   Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  createdAt DateTime  @unique @default(now())

  @@index([groupId])
}

model LogType {
  id                 String     @id @default(uuid())
  name               String     @unique @default("")
  slug               String     @unique @default("")
  from_LogGroup_type LogGroup[] @relation("LogGroup_type")
}

model LogCategory {
  id                     String     @id @default(uuid())
  name                   String     @unique @default("")
  slug                   String     @unique @default("")
  from_LogGroup_category LogGroup[] @relation("LogGroup_category")
}

model LogGroup {
  id                  String       @id @default(uuid())
  name                String       @unique @default("")
  slug                String       @unique @default("")
  type                LogType?     @relation("LogGroup_type", fields: [typeId], references: [id])
  typeId              String?      @map("type")
  category            LogCategory? @relation("LogGroup_category", fields: [categoryId], references: [id])
  categoryId          String?      @map("category")
  startDate           DateTime?    @mysql.Date
  endDate             DateTime?    @mysql.Date
  completed           Boolean      @default(false)
  from_LogEntry_group LogEntry[]   @relation("LogEntry_group")

  @@index([typeId])
  @@index([categoryId])
}
